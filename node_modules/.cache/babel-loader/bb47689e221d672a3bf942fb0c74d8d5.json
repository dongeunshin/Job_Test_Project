{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHIN\\\\Desktop\\\\elice_project\\\\job_project\\\\src\\\\Components\\\\Result.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext, useContext } from 'react';\nimport axios from 'axios';\nimport { UserContext } from \"./user\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"2888152ec00da94eef10fefe0d3dbb48\";\n\nconst Result = () => {\n  _s();\n\n  let seq = \"\";\n  let maxNum1 = \"\";\n  let maxNum2 = \"\";\n  const context = useContext(UserContext);\n  const [jsonData, setJsonData] = useState({});\n  const [jobInfo, setJobInfo] = useState([]);\n  const [majorInfo, setMajorInfo] = useState([]);\n  useEffect(() => {\n    (async function () {\n      const url = `http://www.career.go.kr/inspct/openapi/test/report?apikey=${apiKey}&qestrnSeq=6`;\n      const response = await axios.post(url, context);\n      seq = response.data.RESULT['url'].split(\"seq=\")[1];\n      const scoreUrl = `https://www.career.go.kr/inspct/api/psycho/report?seq=${seq}`;\n      const response2 = await axios.get(scoreUrl);\n      setJsonData(response2['data']);\n      const wonScore = response2['data'].result['wonScore'];\n\n      for (let i of wonScore.split(\" \")) {\n        let wonScoreValue = i.split(\"=\");\n        getMaxNum.push([parseInt(wonScoreValue[1]), wonScoreValue[0]]);\n      }\n\n      let maxNums = [];\n\n      for (let i = 0; i < getMaxNum.length; i++) {\n        if (maxNums.length < 2) {\n          maxNums.push(getMaxNum[i]);\n          maxNums.sort();\n        } else {\n          for (let j = 0; j < maxNums.length; j++) {\n            if (maxNums[j][0] < getMaxNum[i][0]) {\n              maxNums.shift();\n              maxNums.push(getMaxNum[i]);\n              maxNums.sort();\n            }\n          }\n        }\n      }\n\n      maxNum1 = maxNums[1][1];\n      maxNum2 = maxNums[0][1];\n      const joburl = `https://inspct.career.go.kr/inspct/api/psycho/value/jobs?no1=${maxNum1}&no2=${maxNum2}`;\n      const jobRes = await axios.get(joburl);\n      setJobInfo(jobRes['data']);\n      const majorUrl = `https://inspct.career.go.kr/inspct/api/psycho/value/majors?no1=${maxNum1}&no2=${maxNum2}`;\n      const majorRes = await axios.get(majorUrl);\n      setMajorInfo(majorRes['data']);\n    })();\n  }, []);\n\n  function ShowJobInfo() {\n    const graduateCollege = jobInfo.filter(item => {\n      return item[2] === 1 || item[2] === 2 || item[2] === 3;\n    }).map(item => {\n      return item[1];\n    }).join(\", \");\n    const graduateUniv = jobInfo.filter(item => {\n      return item[2] === 4;\n    }).map(item => {\n      return item[1];\n    }).join(\", \");\n    const graduateGrad = jobInfo.filter(item => {\n      return item[2] === 5;\n    }).map(item => {\n      return item[1];\n    }).join(\", \");\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uC9C1\\uC5C5\\uAC00\\uCE58\\uAD00 \\uAC80\\uC0AC \\uACB0\\uACFC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n      children: \"\\uAC00\\uCE58\\uAD00\\uACFC \\uAD00\\uB828\\uC774 \\uB192\\uC740 \\uC9C1\\uC5C5\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"jobInfo\",\n      children: jobInfo && jobInfo.length > 0 ? /*#__PURE__*/_jsxDEV(ShowJobInfo, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 49\n      }, this) : undefined\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Result, \"IYP55tV864kIG6xbB4JtukdLoX8=\");\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["C:/Users/SHIN/Desktop/elice_project/job_project/src/Components/Result.js"],"names":["React","createContext","useContext","axios","UserContext","apiKey","Result","seq","maxNum1","maxNum2","context","jsonData","setJsonData","useState","jobInfo","setJobInfo","majorInfo","setMajorInfo","useEffect","url","response","post","data","RESULT","split","scoreUrl","response2","get","wonScore","result","i","wonScoreValue","getMaxNum","push","parseInt","maxNums","length","sort","j","shift","joburl","jobRes","majorUrl","majorRes","ShowJobInfo","graduateCollege","filter","item","map","join","graduateUniv","graduateGrad","undefined"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,UAA/B,QAAiD,OAAjD;AACA,OAAOC,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,QAA5B;;AACA,MAAMC,MAAM,GAAG,kCAAf;;AAEA,MAAMC,MAAM,GAAG,MAAM;AAAA;;AACjB,MAAIC,GAAG,GAAG,EAAV;AACA,MAAIC,OAAO,GAAG,EAAd;AACA,MAAIC,OAAO,GAAG,EAAd;AAEA,QAAMC,OAAO,GAAGR,UAAU,CAACE,WAAD,CAA1B;AACA,QAAM,CAACO,QAAD,EAAWC,WAAX,IAA0BC,QAAQ,CAAC,EAAD,CAAxC;AACA,QAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBF,QAAQ,CAAC,EAAD,CAAtC;AACA,QAAM,CAACG,SAAD,EAAYC,YAAZ,IAA4BJ,QAAQ,CAAC,EAAD,CAA1C;AAEAK,EAAAA,SAAS,CAAC,MAAM;AACZ,KAAC,kBAAiB;AAClB,YAAMC,GAAG,GAAI,6DAA4Dd,MAAO,cAAhF;AACA,YAAMe,QAAQ,GAAG,MAAMjB,KAAK,CAACkB,IAAN,CAAWF,GAAX,EAAgBT,OAAhB,CAAvB;AACAH,MAAAA,GAAG,GAAGa,QAAQ,CAACE,IAAT,CAAcC,MAAd,CAAqB,KAArB,EAA4BC,KAA5B,CAAkC,MAAlC,EAA0C,CAA1C,CAAN;AAEA,YAAMC,QAAQ,GAAI,yDAAwDlB,GAAI,EAA9E;AACA,YAAMmB,SAAS,GAAG,MAAMvB,KAAK,CAACwB,GAAN,CAAUF,QAAV,CAAxB;AACAb,MAAAA,WAAW,CAACc,SAAS,CAAC,MAAD,CAAV,CAAX;AACA,YAAME,QAAQ,GAAGF,SAAS,CAAC,MAAD,CAAT,CAAkBG,MAAlB,CAAyB,UAAzB,CAAjB;;AACA,WAAK,IAAIC,CAAT,IAAcF,QAAQ,CAACJ,KAAT,CAAe,GAAf,CAAd,EAAkC;AAC9B,YAAIO,aAAa,GAAGD,CAAC,CAACN,KAAF,CAAQ,GAAR,CAApB;AACAQ,QAAAA,SAAS,CAACC,IAAV,CAAe,CAACC,QAAQ,CAACH,aAAa,CAAC,CAAD,CAAd,CAAT,EAA4BA,aAAa,CAAC,CAAD,CAAzC,CAAf;AACH;;AACD,UAAII,OAAO,GAAG,EAAd;;AACE,WAAK,IAAIL,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGE,SAAS,CAACI,MAA9B,EAAsCN,CAAC,EAAvC,EAA0C;AACtC,YAAIK,OAAO,CAACC,MAAR,GAAiB,CAArB,EAAuB;AACnBD,UAAAA,OAAO,CAACF,IAAR,CAAaD,SAAS,CAACF,CAAD,CAAtB;AACAK,UAAAA,OAAO,CAACE,IAAR;AACH,SAHD,MAGO;AACH,eAAK,IAAIC,CAAC,GAAG,CAAb,EAAgBA,CAAC,GAAGH,OAAO,CAACC,MAA5B,EAAoCE,CAAC,EAArC,EAAwC;AACpC,gBAAIH,OAAO,CAACG,CAAD,CAAP,CAAW,CAAX,IAAgBN,SAAS,CAACF,CAAD,CAAT,CAAa,CAAb,CAApB,EAAoC;AAChCK,cAAAA,OAAO,CAACI,KAAR;AACAJ,cAAAA,OAAO,CAACF,IAAR,CAAaD,SAAS,CAACF,CAAD,CAAtB;AACAK,cAAAA,OAAO,CAACE,IAAR;AACH;AACJ;AACJ;AACJ;;AACH7B,MAAAA,OAAO,GAAG2B,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAV;AACA1B,MAAAA,OAAO,GAAG0B,OAAO,CAAC,CAAD,CAAP,CAAW,CAAX,CAAV;AAEA,YAAMK,MAAM,GAAI,gEAA+DhC,OAAQ,QAAOC,OAAQ,EAAtG;AACA,YAAMgC,MAAM,GAAG,MAAMtC,KAAK,CAACwB,GAAN,CAAUa,MAAV,CAArB;AACAzB,MAAAA,UAAU,CAAC0B,MAAM,CAAC,MAAD,CAAP,CAAV;AAEA,YAAMC,QAAQ,GAAI,kEAAiElC,OAAQ,QAAOC,OAAQ,EAA1G;AACA,YAAMkC,QAAQ,GAAG,MAAMxC,KAAK,CAACwB,GAAN,CAAUe,QAAV,CAAvB;AACAzB,MAAAA,YAAY,CAAC0B,QAAQ,CAAC,MAAD,CAAT,CAAZ;AAIC,KAzCD;AA0CH,GA3CQ,EA2CP,EA3CO,CAAT;;AA8CA,WAASC,WAAT,GAAsB;AAClB,UAAMC,eAAe,GAAG/B,OAAO,CAC9BgC,MADuB,CACfC,IAAD,IAAU;AAChB,aAAOA,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAZ,IAAiBA,IAAI,CAAC,CAAD,CAAJ,KAAY,CAA7B,IAAkCA,IAAI,CAAC,CAAD,CAAJ,KAAY,CAArD;AACD,KAHuB,EAIvBC,GAJuB,CAIlBD,IAAD,IAAU;AACb,aAAOA,IAAI,CAAC,CAAD,CAAX;AACD,KANuB,EAOvBE,IAPuB,CAOlB,IAPkB,CAAxB;AASA,UAAMC,YAAY,GAAGpC,OAAO,CAC3BgC,MADoB,CACZC,IAAD,IAAU;AAChB,aAAOA,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAnB;AACD,KAHoB,EAIpBC,GAJoB,CAIfD,IAAD,IAAU;AACb,aAAOA,IAAI,CAAC,CAAD,CAAX;AACD,KANoB,EAOpBE,IAPoB,CAOf,IAPe,CAArB;AASA,UAAME,YAAY,GAAGrC,OAAO,CAC3BgC,MADoB,CACZC,IAAD,IAAU;AAChB,aAAOA,IAAI,CAAC,CAAD,CAAJ,KAAY,CAAnB;AACD,KAHoB,EAIpBC,GAJoB,CAIfD,IAAD,IAAU;AACb,aAAOA,IAAI,CAAC,CAAD,CAAX;AACD,KANoB,EAOpBE,IAPoB,CAOf,IAPe,CAArB;AAUH;;AAGD,sBACI;AAAA,4BACI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAEI;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAGI;AAAK,MAAA,SAAS,EAAC,SAAf;AAAA,gBACInC,OAAO,IAAIA,OAAO,CAACsB,MAAR,GAAiB,CAA5B,gBAAgC,QAAC,WAAD;AAAA;AAAA;AAAA;AAAA,cAAhC,GAAkDgB;AADtD;AAAA;AAAA;AAAA;AAAA,YAHJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AAWH,CAnGD;;GAAM9C,M;;KAAAA,M;AAqGN,eAAeA,MAAf","sourcesContent":["import React, { createContext, useContext } from 'react';\r\nimport axios from 'axios';\r\nimport { UserContext } from \"./user\";\r\nconst apiKey = \"2888152ec00da94eef10fefe0d3dbb48\"\r\n\r\nconst Result = () => {\r\n    let seq = \"\";\r\n    let maxNum1 = \"\";\r\n    let maxNum2 = \"\";\r\n\r\n    const context = useContext(UserContext);\r\n    const [jsonData, setJsonData] = useState({})\r\n    const [jobInfo, setJobInfo] = useState([])\r\n    const [majorInfo, setMajorInfo] = useState([])\r\n\r\n    useEffect(() => {\r\n        (async function() {\r\n        const url = `http://www.career.go.kr/inspct/openapi/test/report?apikey=${apiKey}&qestrnSeq=6`\r\n        const response = await axios.post(url, context);\r\n        seq = response.data.RESULT['url'].split(\"seq=\")[1];\r\n  \r\n        const scoreUrl = `https://www.career.go.kr/inspct/api/psycho/report?seq=${seq}`;\r\n        const response2 = await axios.get(scoreUrl);\r\n        setJsonData(response2['data'])\r\n        const wonScore = response2['data'].result['wonScore'];\r\n        for (let i of wonScore.split(\" \")){\r\n            let wonScoreValue = i.split(\"=\")\r\n            getMaxNum.push([parseInt(wonScoreValue[1]),wonScoreValue[0]])\r\n        }\r\n        let maxNums = []\r\n          for (let i = 0; i < getMaxNum.length; i++){\r\n              if (maxNums.length < 2){\r\n                  maxNums.push(getMaxNum[i])\r\n                  maxNums.sort()\r\n              } else {\r\n                  for (let j = 0; j < maxNums.length; j++){\r\n                      if (maxNums[j][0] < getMaxNum[i][0]){\r\n                          maxNums.shift()\r\n                          maxNums.push(getMaxNum[i])\r\n                          maxNums.sort()\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n        maxNum1 = maxNums[1][1];\r\n        maxNum2 = maxNums[0][1];\r\n\r\n        const joburl = `https://inspct.career.go.kr/inspct/api/psycho/value/jobs?no1=${maxNum1}&no2=${maxNum2}`\r\n        const jobRes = await axios.get(joburl);\r\n        setJobInfo(jobRes['data'])\r\n\r\n        const majorUrl = `https://inspct.career.go.kr/inspct/api/psycho/value/majors?no1=${maxNum1}&no2=${maxNum2}`;\r\n        const majorRes = await axios.get(majorUrl);\r\n        setMajorInfo(majorRes['data'])\r\n        \r\n       \r\n\r\n        })();\r\n    },[])\r\n\r\n\r\n    function ShowJobInfo(){\r\n        const graduateCollege = jobInfo\r\n        .filter((item) => {\r\n          return item[2] === 1 || item[2] === 2 || item[2] === 3\r\n        })\r\n        .map((item) => {\r\n          return item[1]\r\n        })\r\n        .join(\", \");\r\n    \r\n        const graduateUniv = jobInfo\r\n        .filter((item) => {\r\n          return item[2] === 4\r\n        })\r\n        .map((item) => {\r\n          return item[1]\r\n        })\r\n        .join(\", \");\r\n    \r\n        const graduateGrad = jobInfo\r\n        .filter((item) => {\r\n          return item[2] === 5\r\n        })\r\n        .map((item) => {\r\n          return item[1]\r\n        })\r\n        .join(\", \");\r\n    \r\n\r\n    }\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>직업가치관 검사 결과</h1>\r\n            <h2>가치관과 관련이 높은 직업</h2>\r\n            <div className=\"jobInfo\">\r\n              { jobInfo && jobInfo.length > 0 ? <ShowJobInfo /> : undefined }\r\n            </div>\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Result;\r\n"]},"metadata":{},"sourceType":"module"}