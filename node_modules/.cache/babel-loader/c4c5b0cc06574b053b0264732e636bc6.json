{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHIN\\\\Desktop\\\\elice_project\\\\job_project\\\\src\\\\Components\\\\Finished.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport axios from 'axios';\nimport { Link, useLocation } from \"react-router-dom\"; //import Test from \"./Test\";\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst apiKey = \"2888152ec00da94eef10fefe0d3dbb48\";\n\nconst Finished = _ref => {\n  _s();\n\n  let {\n    location\n  } = _ref;\n  const [resultUrl, setResultUrl] = useState(\"\");\n  const [mostWorst, setMostWorst] = useState({\n    most: [{}, {}],\n    worst: [{}, {}]\n  }); // const result = [];\n  // const scoressorted = Object.keys(Test.scores).sort();\n  // for (let i = 0; i < scoressorted.length; i++) {\n  //     let tmp = scoressorted[i] + \"=\" + Test.scores[scoressorted[i]];\n  //     result.push(tmp);\n  // }\n\n  useEffect(() => {\n    (async function () {\n      const date = new Date();\n      const param = {\n        \"apikey\": \"2888152ec00da94eef10fefe0d3dbb48\",\n        \"qestrnSeq\": \"6\",\n        \"trgetSe\": \"100209\",\n        \"name\": \"namw\",\n        //state.user.name,\n        \"gender\": \"100323\",\n        //state.user.gender === \"man\" ? \"100323\" : \"100324\",\n        \"startDtm\": date.getTime(),\n        \"answers\": \"\" //result.join(\" \"),\n\n      };\n      const url = `http://www.career.go.kr/inspct/openapi/test/report?apikey=${apiKey}&qestrnSeq=6`;\n      const response = await axios.post(url, param, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      const seq = response.data.RESULT.url.split('=')[1];\n      const scoreUrl = `https://www.career.go.kr/inspct/api/psycho/report?seq=${seq}`;\n      const scoreRes = await axios.get(scoreUrl, {\n        headers: {\n          \"Content-Type\": \"application/json\"\n        }\n      });\n      setResultUrl(response.data.RESULT.url);\n      const score = scoreRes.data.result.wonScore.split(' ').filter(el => el);\n      const scores = score.map(s => {\n        s = s.split(\"=\");\n        return {\n          \"no\": s[0],\n          \"type\": s[0],\n          \"count\": s[1]\n        };\n      });\n      const sortedScore = [...scores].sort((a, b) => a.count - b.count); // dispatch({\n      //   type: \"ADD_RESULT\",\n      //   scores: scores,\n      //   sortedScores: sortedScore\n      // })\n\n      setMostWorst(() => {\n        return {\n          most: sortedScore.slice(-2),\n          worst: sortedScore.slice(0, 2)\n        };\n      });\n    })();\n  }, []); //const location = useLocation();\n\n  const result = location.state.result;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAC80\\uC0AC\\uAC00 \\uC644\\uB8CC\\uB418\\uC5C8\\uC2B5\\uB2C8\\uB2E4\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: `직업생활과 관련하여 ${result}님은 \n                ${mostWorst.most[0].type}(와)과 ${mostWorst.most[1].type}(을)를 가장 중요하게 생각합니다. \n                반면에 ${mostWorst.worst[0].type}, ${mostWorst.worst[1].type}은 상대적으로 덜 중요하게 생각합니다.`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        to: \"/result\",\n        children: /*#__PURE__*/_jsxDEV(\"button\", {\n          children: \"\\uACB0\\uACFC \\uBCF4\\uAE30\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 9\n  }, this);\n};\n\n_s(Finished, \"Q5UeeIZfKbzGrjbEhQ3Bf0g1QC4=\");\n\n_c = Finished;\nexport default Finished;\n\nvar _c;\n\n$RefreshReg$(_c, \"Finished\");","map":{"version":3,"sources":["C:/Users/SHIN/Desktop/elice_project/job_project/src/Components/Finished.js"],"names":["React","useEffect","useState","axios","Link","useLocation","apiKey","Finished","location","resultUrl","setResultUrl","mostWorst","setMostWorst","most","worst","date","Date","param","getTime","url","response","post","headers","seq","data","RESULT","split","scoreUrl","scoreRes","get","score","result","wonScore","filter","el","scores","map","s","sortedScore","sort","a","b","count","slice","state","type"],"mappings":"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","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport axios from 'axios';\r\nimport { Link, useLocation } from \"react-router-dom\";\r\n//import Test from \"./Test\";\r\nconst apiKey = \"2888152ec00da94eef10fefe0d3dbb48\"\r\nconst Finished = ({location}) =>  {\r\n    const [resultUrl, setResultUrl] = useState(\"\");\r\n    const [mostWorst, setMostWorst] = useState({most: [{},{}], worst: [{},{}]});\r\n    // const result = [];\r\n\r\n    // const scoressorted = Object.keys(Test.scores).sort();\r\n    // for (let i = 0; i < scoressorted.length; i++) {\r\n    //     let tmp = scoressorted[i] + \"=\" + Test.scores[scoressorted[i]];\r\n    //     result.push(tmp);\r\n    // }\r\n\r\n    useEffect(() => {\r\n        (async function() {\r\n        const date = new Date();\r\n        const param = {\r\n              \"apikey\": \"2888152ec00da94eef10fefe0d3dbb48\",\r\n              \"qestrnSeq\": \"6\",\r\n              \"trgetSe\": \"100209\",\r\n              \"name\": \"namw\",//state.user.name,\r\n              \"gender\": \"100323\",//state.user.gender === \"man\" ? \"100323\" : \"100324\",\r\n              \"startDtm\": date.getTime(),\r\n              \"answers\": \"\", //result.join(\" \"),\r\n            }\r\n    \r\n\r\n        const url = `http://www.career.go.kr/inspct/openapi/test/report?apikey=${apiKey}&qestrnSeq=6`\r\n        const response = await axios.post(url, param, {headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }})\r\n  \r\n\r\n        \r\n        const seq = response.data.RESULT.url.split('=')[1];\r\n        const scoreUrl = `https://www.career.go.kr/inspct/api/psycho/report?seq=${seq}`;\r\n        const scoreRes = await axios.get(scoreUrl, {headers: {\r\n            \"Content-Type\": \"application/json\"\r\n          }})\r\n        setResultUrl(response.data.RESULT.url)\r\n\r\n        const score = scoreRes.data.result.wonScore.split(' ').filter(el=>el);\r\n        const scores = score.map(s => {\r\n          s = s.split(\"=\");\r\n          return {\"no\": s[0], \"type\": s[0], \"count\": s[1]}\r\n        })\r\n\r\n        const sortedScore = [...scores].sort((a, b) => a.count - b.count)\r\n        // dispatch({\r\n        //   type: \"ADD_RESULT\",\r\n        //   scores: scores,\r\n        //   sortedScores: sortedScore\r\n        // })\r\n\r\n        setMostWorst(() => {\r\n          return {\r\n            most: sortedScore.slice(-2),\r\n            worst: sortedScore.slice(0, 2)\r\n          }\r\n        })\r\n      })();\r\n    },[])\r\n\r\n    //const location = useLocation();\r\n    const result = location.state.result;\r\n    \r\n    return (\r\n        <div>\r\n            <h1>검사가 완료되었습니다</h1>\r\n            <div>\r\n                {`직업생활과 관련하여 ${result}님은 \r\n                ${mostWorst.most[0].type}(와)과 ${mostWorst.most[1].type}(을)를 가장 중요하게 생각합니다. \r\n                반면에 ${mostWorst.worst[0].type}, ${mostWorst.worst[1].type}은 상대적으로 덜 중요하게 생각합니다.`}\r\n            </div>\r\n            <div>\r\n                <Link to='/result'>\r\n                    <button>결과 보기</button>\r\n                </Link>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Finished"]},"metadata":{},"sourceType":"module"}