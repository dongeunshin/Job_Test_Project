{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\SHIN\\\\Desktop\\\\elice_project\\\\job_project\\\\src\\\\Components\\\\Result.js\",\n    _s = $RefreshSig$();\n\nimport axios from 'axios';\nimport React, { useEffect, useContext, useState } from 'react';\nimport { Link } from 'react-router-dom';\nimport { UserContext } from \"./User\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst apiKey = \"2888152ec00da94eef10fefe0d3dbb48\";\nexport function Result() {\n  _s();\n\n  const context = useContext(UserContext);\n  const [jsonData, setJsonData] = useState({});\n  const [jobInfo, setJobInfo] = useState([]);\n  const [majorInfo, setMajorInfo] = useState([]);\n  useEffect(() => {\n    async function load() {\n      let seq = \"\";\n      let maxNum1 = \"\";\n      let maxNum2 = \"\";\n\n      async function loadResult() {\n        try {\n          const response = await axios.post(`http://www.career.go.kr/inspct/openapi/test/report?apikey=${apiKey}&qestrnSeq=6`, context);\n          seq = response.data.RESULT['url'].split(\"seq=\")[1];\n          console.log('POST 불러오기 성공');\n        } catch (e) {\n          console.log('POST 요청에서 에러 발생');\n        }\n      }\n\n      async function loadJsonData() {\n        try {\n          const response2 = await axios.get(`https://www.career.go.kr/inspct/api/psycho/report?seq=${seq}`);\n          setJsonData(response2['data']);\n          const wonScore = response2['data'].result['wonScore'];\n          const getMaxNum = [];\n\n          for (let i of wonScore.split(\" \")) {\n            let wonScoreValue = i.split(\"=\");\n            getMaxNum.push([parseInt(wonScoreValue[1]), wonScoreValue[0]]);\n          }\n\n          let maxNums = [];\n\n          for (let i = 0; i < getMaxNum.length; i++) {\n            if (maxNums.length < 2) {\n              maxNums.push(getMaxNum[i]);\n              maxNums.sort();\n            } else {\n              for (let j = 0; j < maxNums.length; j++) {\n                if (maxNums[j][0] < getMaxNum[i][0]) {\n                  maxNums.shift();\n                  maxNums.push(getMaxNum[i]);\n                  maxNums.sort();\n                }\n              }\n            }\n          }\n\n          maxNum1 = maxNums[1][1];\n          maxNum2 = maxNums[0][1];\n        } catch (error) {\n          console.log(\"JSON Data GET요청에서 에러 발생\");\n        }\n      }\n\n      async function loadJobInfo() {\n        try {\n          const response3 = await axios.get(`https://inspct.career.go.kr/inspct/api/psycho/value/jobs?no1=${maxNum1}&no2=${maxNum2}`);\n          setJobInfo(response3['data']);\n        } catch (e) {\n          console.log(\"관련 직종 GET 요청에서 에러\");\n        }\n      }\n\n      async function loadMajorInfo() {\n        try {\n          const response4 = await axios.get(`https://inspct.career.go.kr/inspct/api/psycho/value/majors?no1=${maxNum1}&no2=${maxNum2}`);\n          setMajorInfo(response4['data']);\n        } catch (e) {\n          console.log(\"관련 학과 GET 요청에서 에러\");\n        }\n      }\n\n      await loadResult();\n      await loadJsonData();\n      await loadJobInfo();\n      await loadMajorInfo();\n    }\n\n    load();\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"\\uAC80\\uC0AC\\uACB0\\uACFC\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Link, {\n      to: \"/main\",\n      children: /*#__PURE__*/_jsxDEV(\"button\", {\n        children: \"\\uB2E4\\uC2DC \\uAC80\\uC0AC\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Result, \"IYP55tV864kIG6xbB4JtukdLoX8=\");\n\n_c = Result;\nexport default Result;\n\nvar _c;\n\n$RefreshReg$(_c, \"Result\");","map":{"version":3,"sources":["C:/Users/SHIN/Desktop/elice_project/job_project/src/Components/Result.js"],"names":["axios","React","useEffect","useContext","useState","Link","UserContext","apiKey","Result","context","jsonData","setJsonData","jobInfo","setJobInfo","majorInfo","setMajorInfo","load","seq","maxNum1","maxNum2","loadResult","response","post","data","RESULT","split","console","log","e","loadJsonData","response2","get","wonScore","result","getMaxNum","i","wonScoreValue","push","parseInt","maxNums","length","sort","j","shift","error","loadJobInfo","response3","loadMajorInfo","response4"],"mappings":"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","sourcesContent":["import axios from 'axios';\r\nimport React, { useEffect, useContext, useState } from 'react';\r\nimport { Link } from 'react-router-dom';\r\nimport { UserContext } from \"./User\";\r\nconst apiKey = \"2888152ec00da94eef10fefe0d3dbb48\"\r\n\r\n\r\nexport function Result() {\r\n  const context = useContext(UserContext);\r\n  const [jsonData, setJsonData] = useState({})\r\n  const [jobInfo, setJobInfo] = useState([])\r\n  const [majorInfo, setMajorInfo] = useState([])\r\n\r\n  useEffect(() => {\r\n    async function load(){\r\n      let seq = \"\";\r\n      let maxNum1 = \"\";\r\n      let maxNum2 = \"\";\r\n      async function loadResult(){\r\n        try {\r\n          const response = await axios.post(`http://www.career.go.kr/inspct/openapi/test/report?apikey=${apiKey}&qestrnSeq=6`, context);\r\n          seq = response.data.RESULT['url'].split(\"seq=\")[1];\r\n          console.log('POST 불러오기 성공');\r\n        } catch (e) {\r\n          console.log('POST 요청에서 에러 발생');\r\n        }\r\n      }\r\n      async function loadJsonData(){\r\n        try {\r\n          const response2 = await axios.get(`https://www.career.go.kr/inspct/api/psycho/report?seq=${seq}`);\r\n          setJsonData(response2['data'])\r\n          const wonScore = response2['data'].result['wonScore'];\r\n          const getMaxNum = [];\r\n          for (let i of wonScore.split(\" \")){\r\n              let wonScoreValue = i.split(\"=\")\r\n              getMaxNum.push([parseInt(wonScoreValue[1]),wonScoreValue[0]])\r\n          }\r\n          let maxNums = []\r\n          for (let i = 0; i < getMaxNum.length; i++){\r\n              if (maxNums.length < 2){\r\n                  maxNums.push(getMaxNum[i])\r\n                  maxNums.sort()\r\n              } else {\r\n                  for (let j = 0; j < maxNums.length; j++){\r\n                      if (maxNums[j][0] < getMaxNum[i][0]){\r\n                          maxNums.shift()\r\n                          maxNums.push(getMaxNum[i])\r\n                          maxNums.sort()\r\n                      }\r\n                  }\r\n              }\r\n          }\r\n          maxNum1 = maxNums[1][1];\r\n          maxNum2 = maxNums[0][1];\r\n        } catch (error) {\r\n          console.log(\"JSON Data GET요청에서 에러 발생\")\r\n        }\r\n      }\r\n      async function loadJobInfo(){\r\n        try {\r\n          const response3 = await axios.get(`https://inspct.career.go.kr/inspct/api/psycho/value/jobs?no1=${maxNum1}&no2=${maxNum2}`);\r\n          setJobInfo(response3['data'])\r\n        } catch (e) {\r\n          console.log(\"관련 직종 GET 요청에서 에러\")\r\n        }\r\n      }\r\n      async function loadMajorInfo(){\r\n        try {\r\n          const response4 = await axios.get(`https://inspct.career.go.kr/inspct/api/psycho/value/majors?no1=${maxNum1}&no2=${maxNum2}`);\r\n          setMajorInfo(response4['data'])\r\n        } catch (e) {\r\n          console.log(\"관련 학과 GET 요청에서 에러\")\r\n        }\r\n      }\r\n      await loadResult();\r\n      await loadJsonData();\r\n      await loadJobInfo();\r\n      await loadMajorInfo();\r\n    }\r\n    load();\r\n  }, [ ])\r\n\r\n  return (\r\n    <>\r\n      <h1>검사결과</h1>\r\n      <Link to=\"/main\">\r\n        <button>다시 검사하기</button>\r\n      </Link>\r\n    </>\r\n  );\r\n}\r\nexport default Result;"]},"metadata":{},"sourceType":"module"}